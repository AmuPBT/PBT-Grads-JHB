{
	"name": "DimensionTrasformation",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SalesLTProduct",
						"type": "DatasetReference"
					},
					"name": "Product"
				},
				{
					"dataset": {
						"referenceName": "SalesLTProductCategory",
						"type": "DatasetReference"
					},
					"name": "ProductCategory"
				},
				{
					"dataset": {
						"referenceName": "SalesLTProductDesc",
						"type": "DatasetReference"
					},
					"name": "ProductDescription"
				},
				{
					"dataset": {
						"referenceName": "SalesLTProductModel",
						"type": "DatasetReference"
					},
					"name": "ProductModel"
				},
				{
					"dataset": {
						"referenceName": "SalesLTProductModelProductDesc",
						"type": "DatasetReference"
					},
					"name": "ProductModelProductDescription"
				},
				{
					"dataset": {
						"referenceName": "SalesLTAddress",
						"type": "DatasetReference"
					},
					"name": "Address"
				},
				{
					"dataset": {
						"referenceName": "SalesLTCustomer",
						"type": "DatasetReference"
					},
					"name": "Customer"
				},
				{
					"dataset": {
						"referenceName": "CustomerDimension",
						"type": "DatasetReference"
					},
					"name": "DimCustomer"
				},
				{
					"dataset": {
						"referenceName": "AddressDimensions",
						"type": "DatasetReference"
					},
					"name": "DimAddress"
				},
				{
					"dataset": {
						"referenceName": "ProductDim",
						"type": "DatasetReference"
					},
					"name": "DimProduct"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DimensionProduct",
						"type": "DatasetReference"
					},
					"name": "SinkProduct"
				},
				{
					"dataset": {
						"referenceName": "CustomerDimension",
						"type": "DatasetReference"
					},
					"name": "SinkCustomer"
				},
				{
					"dataset": {
						"referenceName": "AddressDimensions",
						"type": "DatasetReference"
					},
					"name": "SinkAddress"
				}
			],
			"transformations": [
				{
					"name": "JoinProdDescandProdModProdDesc"
				},
				{
					"name": "JoinProdandProdCat"
				},
				{
					"name": "JoinProdModandProdProdCat"
				},
				{
					"name": "JoinProduct"
				},
				{
					"name": "SelectProduct"
				},
				{
					"name": "PivotProduct"
				},
				{
					"name": "MapDriftProduct",
					"description": "Creates an explicit mapping for each drifted column"
				},
				{
					"name": "JoinProduct1"
				},
				{
					"name": "AggProdDesc"
				},
				{
					"name": "JoinProduct2"
				},
				{
					"name": "SelectProduct2"
				},
				{
					"name": "AggProduct"
				},
				{
					"name": "SelectCustomer"
				},
				{
					"name": "CreateCustomerHash"
				},
				{
					"name": "Exists"
				},
				{
					"name": "LookupCustomerID"
				},
				{
					"name": "SetDates"
				},
				{
					"name": "AllowUpserts"
				},
				{
					"name": "SelectAddress"
				},
				{
					"name": "CreateProductHash"
				},
				{
					"name": "ExistsProduct"
				},
				{
					"name": "LookupProdID"
				},
				{
					"name": "SetDatesProduct"
				},
				{
					"name": "AllowUpsertsProduct"
				},
				{
					"name": "CreateAddressHash"
				},
				{
					"name": "ExistsAddress"
				},
				{
					"name": "LookupAddressID"
				},
				{
					"name": "SetDatesAddress"
				},
				{
					"name": "AllowUpsertsAddress"
				},
				{
					"name": "SelectProductAgg"
				}
			],
			"script": "source(output(\n\t\tProductID as integer,\n\t\tName as string,\n\t\tProductNumber as string,\n\t\tColor as string,\n\t\tStandardCost as double,\n\t\tListPrice as double,\n\t\tSize as string,\n\t\tWeight as double,\n\t\tProductCategoryID as integer,\n\t\tProductModelID as integer,\n\t\tSellStartDate as date,\n\t\tSellEndDate as date,\n\t\tDiscontinuedDate as date,\n\t\tThumbNailPhoto as string,\n\t\tThumbnailPhotoFileName as string,\n\t\trowguid as string,\n\t\tModifiedDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> Product\nsource(output(\n\t\tProductCategoryID as integer,\n\t\tParentProductCategoryID as integer,\n\t\tName as string,\n\t\trowguid as string,\n\t\tModifiedDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ProductCategory\nsource(output(\n\t\tProductDescriptionID as integer,\n\t\tDescription as string,\n\t\trowguid as string,\n\t\tModifiedDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ProductDescription\nsource(output(\n\t\tProductModelID as integer,\n\t\tName as string,\n\t\tCatalogDescription as string,\n\t\trowguid as string,\n\t\tModifiedDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ProductModel\nsource(output(\n\t\tProductModelID as integer,\n\t\tProductDescriptionID as integer,\n\t\tCulture as string,\n\t\trowguid as string,\n\t\tModifiedDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ProductModelProductDescription\nsource(output(\n\t\tColumn_1 as integer,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> Address\nsource(output(\n\t\tColumn_1 as integer,\n\t\tColumn_2 as boolean,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string,\n\t\tColumn_10 as string,\n\t\tColumn_11 as string,\n\t\tColumn_12 as string,\n\t\tColumn_13 as string,\n\t\tColumn_14 as string,\n\t\tColumn_15 as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> Customer\nsource(output(\n\t\tCustomerID as long,\n\t\tTitle as string,\n\t\tFirstName as string,\n\t\tMiddleName as string,\n\t\tLastName as string,\n\t\tSuffix as string,\n\t\tCompanyName as string,\n\t\tSalesPerson as string,\n\t\tEmailAddress as string,\n\t\tPhone as string,\n\t\tPasswordHash as string,\n\t\tPasswordSalt as string,\n\t\tInsertedDate as timestamp,\n\t\tStatus as string,\n\t\tHashkey as string,\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimCustomer\nsource(output(\n\t\tAddressID as integer,\n\t\tAddressLine1 as string,\n\t\tAddressLine2 as string,\n\t\tCity as string,\n\t\tStateProvince as string,\n\t\tCountryRegion as string,\n\t\tPostalCode as string,\n\t\tInsertedDate as timestamp,\n\t\tStatus as string,\n\t\tHashkey as string,\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimAddress\nsource(output(\n\t\tProductID as integer,\n\t\tModelName as string,\n\t\tProductName as string,\n\t\tColor as string,\n\t\tProductNumber as string,\n\t\tProductCategoryName as string,\n\t\tSize as string,\n\t\tListPrice as double,\n\t\tStandardCost as double,\n\t\tWeight as double,\n\t\tSellEndDateID as timestamp,\n\t\tSellStartDateID as timestamp,\n\t\tDiscontinuedDateID as string,\n\t\tModifiedDateID as timestamp,\n\t\tDescriptionCultureAr as string,\n\t\tDescriptionCultureEn as string,\n\t\tDescriptionCultureFr as string,\n\t\tDescriptionCultureHe as string,\n\t\tDescriptionCultureTh as string,\n\t\t{DescriptionCultureZh-cht} as string,\n\t\tInsertedDate as string,\n\t\tHashKey as string,\n\t\tStatus as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimProduct\nProductModelProductDescription, ProductDescription join(ProductModelProductDescription@ProductDescriptionID == ProductDescription@ProductDescriptionID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinProdDescandProdModProdDesc\nProduct, ProductCategory join(Product@ProductCategoryID == ProductCategory@ProductCategoryID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinProdandProdCat\nProductModel, JoinProdandProdCat join(ProductModel@ProductModelID == Product@ProductModelID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinProdModandProdProdCat\nJoinProdModandProdProdCat, JoinProdDescandProdModProdDesc join(ProductModel@ProductModelID == ProductModelProductDescription@ProductModelID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinProduct\nJoinProduct select(mapColumn(\n\t\tProductModelID = ProductModel@ProductModelID,\n\t\tProductDescriptionID = ProductDescription@ProductDescriptionID,\n\t\tProductCategoryID = Product@ProductCategoryID,\n\t\tProductID,\n\t\tProductModelID = ProductModel@ProductModelID,\n\t\tModelName = ProductModel@Name,\n\t\tCatalogDescription,\n\t\tProductName = Product@Name,\n\t\tProductNumber,\n\t\tColor,\n\t\tStandardCost,\n\t\tListPrice,\n\t\tSize,\n\t\tWeight,\n\t\tSellStartDateID = SellStartDate,\n\t\tSellEndDateID = SellEndDate,\n\t\tDiscontinuedDateID = DiscontinuedDate,\n\t\tModifiedDateID = Product@ModifiedDate,\n\t\tProductCategoryName = ProductCategory@Name,\n\t\tCulture,\n\t\tDescription\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectProduct\nSelectProduct pivot(groupBy(Description),\n\tpivotBy(Culture),\n\tDescriptionCulture = max(Description),\n\tcolumnNaming: '$N$V',\n\tlateral: false) ~> PivotProduct\nPivotProduct derive(DescriptionCultureAr = toString(byName('DescriptionCulturear    ')),\n\t\tDescriptionCultureEn = toString(byName('DescriptionCultureen    ')),\n\t\tDescriptionCultureFr = toString(byName('DescriptionCulturefr    ')),\n\t\tDescriptionCultureHe = toString(byName('DescriptionCulturehe    ')),\n\t\tDescriptionCultureTh = toString(byName('DescriptionCultureth    ')),\n\t\t{DescriptionCultureZh-cht} = toString(byName('DescriptionCulturezh-cht'))) ~> MapDriftProduct\nMapDriftProduct, SelectProduct join(PivotProduct@Description == SelectProduct@Description,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinProduct1\nJoinProduct1 aggregate(groupBy(ProductID),\n\tDescriptionCultureAr = max(DescriptionCultureAr),\n\t\t{DescriptionCultureEn    } = max(DescriptionCultureEn),\n\t\t{DescriptionCultureFr   } = max(DescriptionCultureFr),\n\t\tDescriptionCultureHe = max(DescriptionCultureHe),\n\t\tDescriptionCultureTh = max(DescriptionCultureTh),\n\t\t{DescriptionCultureZh-cht} = max({DescriptionCultureZh-cht})) ~> AggProdDesc\nAggProdDesc, SelectProduct join(AggProdDesc@ProductID == SelectProduct@ProductID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinProduct2\nJoinProduct2 select(mapColumn(\n\t\tProductID = SelectProduct@ProductID,\n\t\tProductModelID,\n\t\tProductDescriptionID,\n\t\tDescriptionCultureAr,\n\t\t{DescriptionCultureEn    },\n\t\t{DescriptionCultureFr   },\n\t\tDescriptionCultureHe,\n\t\tDescriptionCultureTh,\n\t\t{DescriptionCultureZh-cht},\n\t\tProductCategoryID,\n\t\tModelName,\n\t\tProductName,\n\t\tProductCategoryName,\n\t\tProductNumber,\n\t\tColor,\n\t\tSize,\n\t\tListPrice,\n\t\tStandardCost,\n\t\tWeight,\n\t\tSellStartDateID,\n\t\tSellEndDateID,\n\t\tDiscontinuedDateID,\n\t\tModifiedDateID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectProduct2\nSelectProduct2 aggregate(groupBy(ProductID,\n\t\tProductModelID,\n\t\tProductCategoryID,\n\t\tModelName,\n\t\tProductName,\n\t\tColor,\n\t\tProductNumber,\n\t\tProductCategoryName,\n\t\tSize,\n\t\tListPrice,\n\t\tStandardCost,\n\t\tWeight,\n\t\tSellEndDateID,\n\t\tSellStartDateID,\n\t\tDiscontinuedDateID,\n\t\tModifiedDateID),\n\tDescriptionCultureAr = max(DescriptionCultureAr),\n\t\t{DescriptionCultureEn    } = max({DescriptionCultureEn    }),\n\t\t{DescriptionCultureFr    } = max({DescriptionCultureFr   }),\n\t\tDescriptionCultureHe = max(DescriptionCultureHe),\n\t\tDescriptionCultureTh = max(DescriptionCultureTh),\n\t\t{DescriptionCultureZh-cht} = max({DescriptionCultureZh-cht})) ~> AggProduct\nCustomer select(mapColumn(\n\t\tCustomerID = Column_1,\n\t\tNameStyle = Column_2,\n\t\tTitle = Column_3,\n\t\tFirstName = Column_4,\n\t\tMiddleName = Column_5,\n\t\tLastName = Column_6,\n\t\tSuffix = Column_7,\n\t\tCompanyName = Column_8,\n\t\tSalesPerson = Column_9,\n\t\tEmailAddress = Column_10,\n\t\tPhone = Column_11,\n\t\tPasswordHash = Column_12,\n\t\tPasswordSalt = Column_13,\n\t\tInsertedDate = Column_15\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectCustomer\nSelectCustomer derive(HashKey = sha2(256, iifNull(Title,'') +FirstName +iifNull(MiddleName,'') +LastName +iifNull(Suffix,'') +iifNull(CompanyName,'') +iifNull(SalesPerson,'') +iifNull(EmailAddress,'') +iifNull(Phone,''))) ~> CreateCustomerHash\nCreateCustomerHash, DimCustomer exists(CreateCustomerHash@HashKey == DimCustomer@Hashkey,\n\tnegate:true,\n\tbroadcast: 'auto')~> Exists\nExists, DimCustomer lookup(SelectCustomer@CustomerID == DimCustomer@CustomerID,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupCustomerID\nLookupCustomerID derive(InsertedDate = iif(isNull(SelectCustomer@InsertedDate), currentDate(), SelectCustomer@InsertedDate),\n\t\tModifiedDate = currentTimestamp()) ~> SetDates\nSetDates alterRow(upsertIf(true())) ~> AllowUpserts\nAddress select(mapColumn(\n\t\tAddressID = Column_1,\n\t\tAddressLine1 = Column_2,\n\t\tAddressLine2 = Column_3,\n\t\tCity = Column_4,\n\t\tStateProvince = Column_5,\n\t\tCountryRegion = Column_6,\n\t\tPostalCode = Column_7,\n\t\tInsertedDate = Column_9\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectAddress\nSelectProductAgg derive(HashKey = sha2(256, iifNull(ProductName,'')  \r\n+iifNull(ProductCategoryName,'') \r\n+iifNull(ModelName,'')\r\n+iifNull(Color,'') \r\n+iifNull(DescriptionCultureAr,'') \r\n+iifNull(DescriptionCultureEn,'') \r\n+iifNull(DescriptionCultureFr,'') \r\n+iifNull(DescriptionCultureHe,'') \r\n+iifNull(DescriptionCultureTh,'') \r\n+iifNull({DescriptionCultureZh-cht},''))) ~> CreateProductHash\nCreateProductHash, DimProduct exists(CreateProductHash@HashKey == DimProduct@HashKey,\n\tnegate:false,\n\tbroadcast: 'auto')~> ExistsProduct\nExistsProduct, DimProduct lookup(SelectProductAgg@ProductID == DimProduct@ProductID,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupProdID\nLookupProdID derive(InsertedDate = iif(isNull(SelectProductAgg@InsertedDate), \r\ncurrentDate(), SelectProductAgg@InsertedDate),\n\t\tModifiedDateID = currentTimestamp()) ~> SetDatesProduct\nSetDatesProduct alterRow(upsertIf(true())) ~> AllowUpsertsProduct\nSelectAddress derive(HashKey = sha2(256, iifNull(AddressLine1,'') \r\n+iifNull(AddressLine2,'')  \r\n+iifNull(City,'') \r\n+iifNull(StateProvince,'')  \r\n+iifNull(CountryRegion,'') \r\n+iifNull(PostalCode,''))) ~> CreateAddressHash\nCreateAddressHash, DimAddress exists(SelectAddress@AddressID == DimAddress@AddressID,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistsAddress\nExistsAddress, DimAddress lookup(SelectAddress@AddressID == DimAddress@AddressID,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupAddressID\nLookupAddressID derive(InsertedDate = iif(isNull(SelectAddress@InsertedDate), \r\ncurrentDate(), SelectAddress@InsertedDate),\n\t\tModifiedDate = currentTimestamp()) ~> SetDatesAddress\nSetDatesAddress alterRow(upsertIf(true())) ~> AllowUpsertsAddress\nAggProduct select(mapColumn(\n\t\tProductID,\n\t\tProductModelID,\n\t\tProductCategoryID,\n\t\tModelName,\n\t\tProductName,\n\t\tColor,\n\t\tProductNumber,\n\t\tProductCategoryName,\n\t\tSize,\n\t\tListPrice,\n\t\tStandardCost,\n\t\tWeight,\n\t\tSellEndDateID,\n\t\tSellStartDateID,\n\t\tDiscontinuedDateID,\n\t\tInsertedDate = ModifiedDateID,\n\t\tDescriptionCultureAr,\n\t\tDescriptionCultureEn = {DescriptionCultureEn    },\n\t\tDescriptionCultureFr = {DescriptionCultureFr    },\n\t\tDescriptionCultureHe,\n\t\tDescriptionCultureTh,\n\t\t{DescriptionCultureZh-cht}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectProductAgg\nAllowUpsertsProduct sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tProductID as integer,\n\t\tModelName as string,\n\t\tProductName as string,\n\t\tColor as string,\n\t\tProductNumber as string,\n\t\tProductCategoryName as string,\n\t\tSize as string,\n\t\tListPrice as double,\n\t\tStandardCost as double,\n\t\tWeight as double,\n\t\tSellEndDateID as timestamp,\n\t\tSellStartDateID as timestamp,\n\t\tDiscontinuedDateID as string,\n\t\tModifiedDateID as timestamp,\n\t\tDescriptionCultureAr as string,\n\t\tDescriptionCultureEn as string,\n\t\tDescriptionCultureFr as string,\n\t\tDescriptionCultureHe as string,\n\t\tDescriptionCultureTh as string,\n\t\t{DescriptionCultureZh-cht} as string,\n\t\tInsertedDate as string,\n\t\tHashKey as string,\n\t\tStatus as string\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['ProductID'],\n\tformat: 'table',\n\tstaged: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tProductID = SelectProductAgg@ProductID,\n\t\tModelName = SelectProductAgg@ModelName,\n\t\tProductName = SelectProductAgg@ProductName,\n\t\tColor = SelectProductAgg@Color,\n\t\tProductNumber = SelectProductAgg@ProductNumber,\n\t\tProductCategoryName = SelectProductAgg@ProductCategoryName,\n\t\tSize = SelectProductAgg@Size,\n\t\tListPrice = SelectProductAgg@ListPrice,\n\t\tStandardCost = SelectProductAgg@StandardCost,\n\t\tWeight = SelectProductAgg@Weight,\n\t\tDescriptionCultureAr = SelectProductAgg@DescriptionCultureAr,\n\t\tDescriptionCultureEn = SelectProductAgg@DescriptionCultureEn,\n\t\tDescriptionCultureFr = SelectProductAgg@DescriptionCultureFr,\n\t\tDescriptionCultureHe = SelectProductAgg@DescriptionCultureHe,\n\t\tDescriptionCultureTh = SelectProductAgg@DescriptionCultureTh,\n\t\t{DescriptionCultureZh-cht} = SelectProductAgg@{DescriptionCultureZh-cht},\n\t\tSellStartDateID = SelectProductAgg@SellStartDateID,\n\t\tSellEndDateID = SelectProductAgg@SellEndDateID,\n\t\tDiscontinuedDateID = SelectProductAgg@DiscontinuedDateID,\n\t\tInsertedDate,\n\t\tHashKey = CreateProductHash@HashKey,\n\t\tModifiedDateID\n\t)) ~> SinkProduct\nAllowUpserts sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tCustomerID as long,\n\t\tTitle as string,\n\t\tFirstName as string,\n\t\tMiddleName as string,\n\t\tLastName as string,\n\t\tSuffix as string,\n\t\tCompanyName as string,\n\t\tSalesPerson as string,\n\t\tEmailAddress as string,\n\t\tPhone as string,\n\t\tPasswordHash as string,\n\t\tPasswordSalt as string,\n\t\tInsertedDate as timestamp,\n\t\tStatus as string,\n\t\tHashkey as string,\n\t\tModifiedDate as timestamp\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['CustomerID'],\n\tformat: 'table',\n\tstaged: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tCustomerID = SelectCustomer@CustomerID,\n\t\tTitle = SelectCustomer@Title,\n\t\tFirstName = SelectCustomer@FirstName,\n\t\tMiddleName = SelectCustomer@MiddleName,\n\t\tLastName = SelectCustomer@LastName,\n\t\tSuffix = SelectCustomer@Suffix,\n\t\tCompanyName = SelectCustomer@CompanyName,\n\t\tSalesPerson = SelectCustomer@SalesPerson,\n\t\tEmailAddress = SelectCustomer@EmailAddress,\n\t\tPhone = SelectCustomer@Phone,\n\t\tPasswordHash = SelectCustomer@PasswordHash,\n\t\tPasswordSalt = SelectCustomer@PasswordSalt,\n\t\tInsertedDate,\n\t\tHashkey = CreateCustomerHash@HashKey,\n\t\tModifiedDate\n\t)) ~> SinkCustomer\nAllowUpsertsAddress sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tAddressID as integer,\n\t\tAddressLine1 as string,\n\t\tAddressLine2 as string,\n\t\tCity as string,\n\t\tStateProvince as string,\n\t\tCountryRegion as string,\n\t\tPostalCode as string,\n\t\tInsertedDate as timestamp,\n\t\tStatus as string,\n\t\tHashkey as string,\n\t\tModifiedDate as timestamp\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['AddressID'],\n\tformat: 'table',\n\tstaged: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tAddressID = SelectAddress@AddressID,\n\t\tAddressLine1 = SelectAddress@AddressLine1,\n\t\tAddressLine2 = SelectAddress@AddressLine2,\n\t\tCity = SelectAddress@City,\n\t\tStateProvince = SelectAddress@StateProvince,\n\t\tCountryRegion = SelectAddress@CountryRegion,\n\t\tPostalCode = SelectAddress@PostalCode,\n\t\tInsertedDate,\n\t\tHashkey = CreateAddressHash@HashKey,\n\t\tModifiedDate\n\t)) ~> SinkAddress"
		}
	}
}