{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "synapse-grad-jhb"
		},
		"ls_adl_adventureworks_lt_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_adl_adventureworks_lt'"
		},
		"ls_sqldb_adventureworks_lt_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_sqldb_adventureworks_lt'"
		},
		"ls_synapse_adventureworks_lt_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_synapse_adventureworks_lt'"
		},
		"synapse-grad-jhb-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'synapse-grad-jhb-WorkspaceDefaultSqlServer'"
		},
		"ls_adl_adventureworks_lt_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlgen2gradjhb.dfs.core.windows.net"
		},
		"synapse-grad-jhb-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlgen2gradjhb.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/CopyPipeline_sql_to_datalake')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "ForEach_yih",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cw_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy_yih",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{item().source.schema}.@{item().source.table}"
										},
										{
											"name": "Destination",
											"value": "dladventureworks/datalake/@{item().destination.fileName}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"validateDataConsistency": false
									},
									"inputs": [
										{
											"referenceName": "SourceDataset_yih",
											"type": "DatasetReference",
											"parameters": {
												"cw_schema": "@item().source.schema",
												"cw_table": "@item().source.table"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationDataset_yih",
											"type": "DatasetReference",
											"parameters": {
												"cw_fileName": "@item().destination.fileName"
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"cw_items": {
						"type": "Array",
						"defaultValue": [
							{
								"source": {
									"schema": "dbo",
									"table": "BuildVersion"
								},
								"destination": {
									"fileName": "dboBuildVersion"
								}
							},
							{
								"source": {
									"schema": "dbo",
									"table": "ErrorLog"
								},
								"destination": {
									"fileName": "dboErrorLog"
								}
							},
							{
								"source": {
									"schema": "SalesLT",
									"table": "Address"
								},
								"destination": {
									"fileName": "SalesLTAddress"
								}
							},
							{
								"source": {
									"schema": "SalesLT",
									"table": "Customer"
								},
								"destination": {
									"fileName": "SalesLTCustomer"
								}
							},
							{
								"source": {
									"schema": "SalesLT",
									"table": "CustomerAddress"
								},
								"destination": {
									"fileName": "SalesLTCustomerAddress"
								}
							},
							{
								"source": {
									"schema": "SalesLT",
									"table": "Product"
								},
								"destination": {
									"fileName": "SalesLTProduct"
								}
							},
							{
								"source": {
									"schema": "SalesLT",
									"table": "ProductCategory"
								},
								"destination": {
									"fileName": "SalesLTProductCategory"
								}
							},
							{
								"source": {
									"schema": "SalesLT",
									"table": "ProductDescription"
								},
								"destination": {
									"fileName": "SalesLTProductDescription"
								}
							},
							{
								"source": {
									"schema": "SalesLT",
									"table": "ProductModel"
								},
								"destination": {
									"fileName": "SalesLTProductModel"
								}
							},
							{
								"source": {
									"schema": "SalesLT",
									"table": "ProductModelProductDescription"
								},
								"destination": {
									"fileName": "SalesLTProductModelProductDescription"
								}
							},
							{
								"source": {
									"schema": "SalesLT",
									"table": "SalesOrderDetail"
								},
								"destination": {
									"fileName": "SalesLTSalesOrderDetail"
								}
							},
							{
								"source": {
									"schema": "SalesLT",
									"table": "SalesOrderHeader"
								},
								"destination": {
									"fileName": "SalesLTSalesOrderHeader"
								}
							}
						]
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SourceDataset_yih')]",
				"[concat(variables('workspaceId'), '/datasets/DestinationDataset_yih')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DataflowCopy')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Run dataflow with Explicit copy to ingest copy source",
				"activities": [
					{
						"name": "Trasformation",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Trasformation",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Product": {},
									"ProductCategory": {},
									"ProductDescription": {},
									"ProductModel": {},
									"ProductModelProductDescription": {},
									"SinkProductDimension": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/Trasformation')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Address')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sqldb_adventureworks_lt",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "AdventureWorksLT"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AddressID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AddressLine1",
						"type": "nvarchar"
					},
					{
						"name": "AddressLine2",
						"type": "nvarchar"
					},
					{
						"name": "City",
						"type": "nvarchar"
					},
					{
						"name": "StateProvince",
						"type": "nvarchar"
					},
					{
						"name": "CountryRegion",
						"type": "nvarchar"
					},
					{
						"name": "PostalCode",
						"type": "nvarchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "Address"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ls_sqldb_adventureworks_lt')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Customer')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sqldb_adventureworks_lt",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "AdventureWorksLT"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NameStyle",
						"type": "bit"
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "MiddleName",
						"type": "nvarchar"
					},
					{
						"name": "LastName",
						"type": "nvarchar"
					},
					{
						"name": "Suffix",
						"type": "nvarchar"
					},
					{
						"name": "CompanyName",
						"type": "nvarchar"
					},
					{
						"name": "SalesPerson",
						"type": "nvarchar"
					},
					{
						"name": "EmailAddress",
						"type": "nvarchar"
					},
					{
						"name": "Phone",
						"type": "nvarchar"
					},
					{
						"name": "PasswordHash",
						"type": "varchar"
					},
					{
						"name": "PasswordSalt",
						"type": "varchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "Customer"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ls_sqldb_adventureworks_lt')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CustomerAddress')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sqldb_adventureworks_lt",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "AdventureWorksLT"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AddressID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AddressType",
						"type": "nvarchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "CustomerAddress"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ls_sqldb_adventureworks_lt')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DestinationDataset_yih')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adl_adventureworks_lt",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_fileName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().cw_fileName",
							"type": "Expression"
						},
						"folderPath": "datalake",
						"fileSystem": "dladventureworks"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ls_adl_adventureworks_lt')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DimensionProduct')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_synapse_adventureworks_lt",
					"type": "LinkedServiceReference",
					"parameters": {
						"adventureworks_schema": "sqlpool_adventureworksLT_jhb"
					}
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ModelName",
						"type": "nvarchar"
					},
					{
						"name": "ProductName",
						"type": "nvarchar"
					},
					{
						"name": "Color",
						"type": "nvarchar"
					},
					{
						"name": "ProductNumber",
						"type": "nvarchar"
					},
					{
						"name": "ProductCategoryName",
						"type": "nvarchar"
					},
					{
						"name": "Size",
						"type": "nvarchar"
					},
					{
						"name": "ListPrice",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "StandardCost",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "Weight",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "SellEndDateID",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "SellStartDateID",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DiscontinuedDateID",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDateID",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DescriptionCultureAr",
						"type": "nvarchar"
					},
					{
						"name": "DescriptionCultureEn",
						"type": "nvarchar"
					},
					{
						"name": "DescriptionCultureFr",
						"type": "nvarchar"
					},
					{
						"name": "DescriptionCultureHe",
						"type": "nvarchar"
					},
					{
						"name": "DescriptionCultureTh",
						"type": "nvarchar"
					},
					{
						"name": "DescriptionCultureZh-cht",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "adventureworks_schema",
					"table": "Product_Dim"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ls_synapse_adventureworks_lt')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Product')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sqldb_adventureworks_lt",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "AdventureWorksLT"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "ProductNumber",
						"type": "nvarchar"
					},
					{
						"name": "Color",
						"type": "nvarchar"
					},
					{
						"name": "StandardCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "ListPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Size",
						"type": "nvarchar"
					},
					{
						"name": "Weight",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "ProductCategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductModelID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SellStartDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "SellEndDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DiscontinuedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ThumbNailPhoto",
						"type": "varbinary"
					},
					{
						"name": "ThumbnailPhotoFileName",
						"type": "nvarchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "Product"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ls_sqldb_adventureworks_lt')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ProductCategory')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sqldb_adventureworks_lt",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "AdventureWorksLT"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductCategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ParentProductCategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "ProductCategory"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ls_sqldb_adventureworks_lt')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ProductDescription')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sqldb_adventureworks_lt",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "AdventureWorksLT"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductDescriptionID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Description",
						"type": "nvarchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "ProductDescription"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ls_sqldb_adventureworks_lt')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ProductModel')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sqldb_adventureworks_lt",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "AdventureWorksLT"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductModelID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "CatalogDescription",
						"type": "xml"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "ProductModel"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ls_sqldb_adventureworks_lt')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ProductModelProductDescription')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sqldb_adventureworks_lt",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "AdventureWorksLT"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductModelID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductDescriptionID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Culture",
						"type": "nchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "ProductModelProductDescription"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ls_sqldb_adventureworks_lt')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SalesLTProduct')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adl_adventureworks_lt",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "SalesLTProduct",
						"folderPath": "datalake",
						"fileSystem": "dladventureworks"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ls_adl_adventureworks_lt')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SalesLTProductCategory')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adl_adventureworks_lt",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "SalesLTProductCategory",
						"folderPath": "datalake",
						"fileSystem": "dladventureworks"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ls_adl_adventureworks_lt')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SalesLTProductDesc')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adl_adventureworks_lt",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "SalesLTProductDescription",
						"folderPath": "datalake",
						"fileSystem": "dladventureworks"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ls_adl_adventureworks_lt')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SalesLTProductModel')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adl_adventureworks_lt",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "SalesLTProductModel",
						"folderPath": "datalake",
						"fileSystem": "dladventureworks"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ls_adl_adventureworks_lt')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SalesLTProductModelProductDesc')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adl_adventureworks_lt",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "SalesLTProductModelProductDescription",
						"folderPath": "datalake",
						"fileSystem": "dladventureworks"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ls_adl_adventureworks_lt')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SalesOrderDetail')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sqldb_adventureworks_lt",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "AdventureWorksLT"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SalesOrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesOrderDetailID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OrderQty",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UnitPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "UnitPriceDiscount",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "LineTotal",
						"type": "decimal",
						"precision": 38,
						"scale": 6
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "SalesOrderDetail"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ls_sqldb_adventureworks_lt')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SalesOrderHeader')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sqldb_adventureworks_lt",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "AdventureWorksLT"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SalesOrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RevisionNumber",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "OrderDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DueDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ShipDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Status",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "OnlineOrderFlag",
						"type": "bit"
					},
					{
						"name": "SalesOrderNumber",
						"type": "nvarchar"
					},
					{
						"name": "PurchaseOrderNumber",
						"type": "nvarchar"
					},
					{
						"name": "AccountNumber",
						"type": "nvarchar"
					},
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ShipToAddressID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BillToAddressID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ShipMethod",
						"type": "nvarchar"
					},
					{
						"name": "CreditCardApprovalCode",
						"type": "varchar"
					},
					{
						"name": "SubTotal",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TaxAmt",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Freight",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TotalDue",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Comment",
						"type": "nvarchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "SalesOrderHeader"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ls_sqldb_adventureworks_lt')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SourceDataset')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Connection to your source data store.",
				"linkedServiceName": {
					"referenceName": "ls_adl_adventureworks_lt",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					},
					"SourceContainer": {
						"type": "string"
					},
					"SourceDirectory": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().SourceDirectory",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().SourceContainer",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ls_adl_adventureworks_lt')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SourceDataset_yih')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sqldb_adventureworks_lt",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_schema": {
						"type": "String"
					},
					"cw_table": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().cw_schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ls_sqldb_adventureworks_lt')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ls_adl_adventureworks_lt')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_adl_adventureworks_lt_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_adl_adventureworks_lt_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ls_sqldb_adventureworks_lt')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ls_sqldb_adventureworks_lt_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ls_synapse_adventureworks_lt')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"adventureworks_schema": {
						"type": "string",
						"defaultValue": "sqlpool_adventureworksLT_jhb"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('ls_synapse_adventureworks_lt_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/synapse-grad-jhb-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('synapse-grad-jhb-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/synapse-grad-jhb-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('synapse-grad-jhb-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/IntegrationRuntime1')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 16,
							"timeToLive": 0,
							"cleanup": true
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/IntegrationRuntimeSH')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Trasformation')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SalesLTProduct",
								"type": "DatasetReference"
							},
							"name": "Product"
						},
						{
							"dataset": {
								"referenceName": "SalesLTProductCategory",
								"type": "DatasetReference"
							},
							"name": "ProductCategory"
						},
						{
							"dataset": {
								"referenceName": "SalesLTProductDesc",
								"type": "DatasetReference"
							},
							"name": "ProductDescription"
						},
						{
							"dataset": {
								"referenceName": "SalesLTProductModel",
								"type": "DatasetReference"
							},
							"name": "ProductModel"
						},
						{
							"dataset": {
								"referenceName": "SalesLTProductModelProductDesc",
								"type": "DatasetReference"
							},
							"name": "ProductModelProductDescription"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DimensionProduct",
								"type": "DatasetReference"
							},
							"name": "SinkProductDimension"
						}
					],
					"transformations": [
						{
							"name": "JoinProdDescandProdModProdDesc"
						},
						{
							"name": "JoinProdandProdCat"
						},
						{
							"name": "JoinProdModandProdProdCat"
						},
						{
							"name": "JoinProduct"
						},
						{
							"name": "SelectProduct"
						},
						{
							"name": "PivotProduct"
						},
						{
							"name": "MapDriftProduct",
							"description": "Creates an explicit mapping for each drifted column"
						},
						{
							"name": "JoinProduct1"
						},
						{
							"name": "AggProdDesc"
						},
						{
							"name": "JoinProduct2"
						},
						{
							"name": "SelectProduct2"
						},
						{
							"name": "AggProduct"
						}
					],
					"script": "source(output(\n\t\tProductID as integer,\n\t\tName as string,\n\t\tProductNumber as string,\n\t\tColor as string,\n\t\tStandardCost as double,\n\t\tListPrice as double,\n\t\tSize as string,\n\t\tWeight as double,\n\t\tProductCategoryID as integer,\n\t\tProductModelID as integer,\n\t\tSellStartDate as date,\n\t\tSellEndDate as date,\n\t\tDiscontinuedDate as date,\n\t\tThumbNailPhoto as string,\n\t\tThumbnailPhotoFileName as string,\n\t\trowguid as string,\n\t\tModifiedDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> Product\nsource(output(\n\t\tProductCategoryID as integer,\n\t\tParentProductCategoryID as integer,\n\t\tName as string,\n\t\trowguid as string,\n\t\tModifiedDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ProductCategory\nsource(output(\n\t\tProductDescriptionID as integer,\n\t\tDescription as string,\n\t\trowguid as string,\n\t\tModifiedDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ProductDescription\nsource(output(\n\t\tProductModelID as integer,\n\t\tName as string,\n\t\tCatalogDescription as string,\n\t\trowguid as string,\n\t\tModifiedDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ProductModel\nsource(output(\n\t\tProductModelID as integer,\n\t\tProductDescriptionID as integer,\n\t\tCulture as string,\n\t\trowguid as string,\n\t\tModifiedDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ProductModelProductDescription\nProductModelProductDescription, ProductDescription join(ProductModelProductDescription@ProductDescriptionID == ProductDescription@ProductDescriptionID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinProdDescandProdModProdDesc\nProduct, ProductCategory join(Product@ProductCategoryID == ProductCategory@ProductCategoryID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinProdandProdCat\nProductModel, JoinProdandProdCat join(ProductModel@ProductModelID == Product@ProductModelID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinProdModandProdProdCat\nJoinProdModandProdProdCat, JoinProdDescandProdModProdDesc join(ProductModel@ProductModelID == ProductModelProductDescription@ProductModelID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinProduct\nJoinProduct select(mapColumn(\n\t\tProductModelID = ProductModel@ProductModelID,\n\t\tProductDescriptionID = ProductDescription@ProductDescriptionID,\n\t\tProductCategoryID = Product@ProductCategoryID,\n\t\tProductID,\n\t\tProductModelID = ProductModel@ProductModelID,\n\t\tModelName = ProductModel@Name,\n\t\tCatalogDescription,\n\t\tProductName = Product@Name,\n\t\tProductNumber,\n\t\tColor,\n\t\tStandardCost,\n\t\tListPrice,\n\t\tSize,\n\t\tWeight,\n\t\tSellStartDateID = SellStartDate,\n\t\tSellEndDateID = SellEndDate,\n\t\tDiscontinuedDateID = DiscontinuedDate,\n\t\tModifiedDateID = Product@ModifiedDate,\n\t\tProductCategoryName = ProductCategory@Name,\n\t\tCulture,\n\t\tDescription\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectProduct\nSelectProduct pivot(groupBy(Description),\n\tpivotBy(Culture),\n\tDescriptionCulture = max(Description),\n\tcolumnNaming: '$N$V',\n\tlateral: false) ~> PivotProduct\nPivotProduct derive(DescriptionCultureAr = toString(byName('DescriptionCulturear    ')),\n\t\tDescriptionCultureEn = toString(byName('DescriptionCultureen    ')),\n\t\tDescriptionCultureFr = toString(byName('DescriptionCulturefr    ')),\n\t\tDescriptionCultureHe = toString(byName('DescriptionCulturehe    ')),\n\t\tDescriptionCultureTh = toString(byName('DescriptionCultureth    ')),\n\t\t{DescriptionCultureZh-cht} = toString(byName('DescriptionCulturezh-cht'))) ~> MapDriftProduct\nMapDriftProduct, SelectProduct join(PivotProduct@Description == SelectProduct@Description,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinProduct1\nJoinProduct1 aggregate(groupBy(ProductID),\n\tDescriptionCultureAr = max(DescriptionCultureAr),\n\t\t{DescriptionCultureEn    } = max(DescriptionCultureEn),\n\t\t{DescriptionCultureFr   } = max(DescriptionCultureFr),\n\t\tDescriptionCultureHe = max(DescriptionCultureHe),\n\t\tDescriptionCultureTh = max(DescriptionCultureTh),\n\t\t{DescriptionCultureZh-cht} = max({DescriptionCultureZh-cht})) ~> AggProdDesc\nAggProdDesc, SelectProduct join(AggProdDesc@ProductID == SelectProduct@ProductID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinProduct2\nJoinProduct2 select(mapColumn(\n\t\tProductID = SelectProduct@ProductID,\n\t\tProductModelID,\n\t\tProductDescriptionID,\n\t\tDescriptionCultureAr,\n\t\t{DescriptionCultureEn    },\n\t\t{DescriptionCultureFr   },\n\t\tDescriptionCultureHe,\n\t\tDescriptionCultureTh,\n\t\t{DescriptionCultureZh-cht},\n\t\tProductCategoryID,\n\t\tModelName,\n\t\tProductName,\n\t\tProductCategoryName,\n\t\tProductNumber,\n\t\tColor,\n\t\tSize,\n\t\tListPrice,\n\t\tStandardCost,\n\t\tWeight,\n\t\tSellStartDateID,\n\t\tSellEndDateID,\n\t\tDiscontinuedDateID,\n\t\tModifiedDateID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectProduct2\nSelectProduct2 aggregate(groupBy(ProductID,\n\t\tProductModelID,\n\t\tProductCategoryID,\n\t\tModelName,\n\t\tProductName,\n\t\tColor,\n\t\tProductNumber,\n\t\tProductCategoryName,\n\t\tSize,\n\t\tListPrice,\n\t\tStandardCost,\n\t\tWeight,\n\t\tSellEndDateID,\n\t\tSellStartDateID,\n\t\tDiscontinuedDateID,\n\t\tModifiedDateID),\n\tDescriptionCultureAr = max(DescriptionCultureAr),\n\t\t{DescriptionCultureEn    } = max({DescriptionCultureEn    }),\n\t\t{DescriptionCultureFr    } = max({DescriptionCultureFr   }),\n\t\tDescriptionCultureHe = max(DescriptionCultureHe),\n\t\tDescriptionCultureTh = max(DescriptionCultureTh),\n\t\t{DescriptionCultureZh-cht} = max({DescriptionCultureZh-cht})) ~> AggProduct\nAggProduct sink(input(\n\t\tProductID as integer,\n\t\tModelName as string,\n\t\tProductName as string,\n\t\tColor as string,\n\t\tProductNumber as string,\n\t\tProductCategoryName as string,\n\t\tSize as string,\n\t\tListPrice as decimal(8,2),\n\t\tStandardCost as decimal(8,2),\n\t\tWeight as decimal(8,2),\n\t\tSellEndDateID as timestamp,\n\t\tSellStartDateID as timestamp,\n\t\tDiscontinuedDateID as timestamp,\n\t\tModifiedDateID as timestamp,\n\t\tDescriptionCultureAr as string,\n\t\tDescriptionCultureEn as string,\n\t\tDescriptionCultureFr as string,\n\t\tDescriptionCultureHe as string,\n\t\tDescriptionCultureTh as string,\n\t\t{DescriptionCultureZh-cht} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tstaged: false,\n\tmapColumn(\n\t\tProductID,\n\t\tModelName,\n\t\tProductName,\n\t\tColor,\n\t\tProductNumber,\n\t\tProductCategoryName,\n\t\tSize,\n\t\tListPrice,\n\t\tStandardCost,\n\t\tWeight,\n\t\tSellEndDateID,\n\t\tSellStartDateID,\n\t\tDiscontinuedDateID,\n\t\tModifiedDateID,\n\t\tDescriptionCultureAr,\n\t\tDescriptionCultureEn = {DescriptionCultureEn    },\n\t\tDescriptionCultureFr = {DescriptionCultureFr    },\n\t\tDescriptionCultureHe,\n\t\tDescriptionCultureTh,\n\t\t{DescriptionCultureZh-cht}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> SinkProductDimension"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SalesLTProduct')]",
				"[concat(variables('workspaceId'), '/datasets/SalesLTProductCategory')]",
				"[concat(variables('workspaceId'), '/datasets/SalesLTProductDesc')]",
				"[concat(variables('workspaceId'), '/datasets/SalesLTProductModel')]",
				"[concat(variables('workspaceId'), '/datasets/SalesLTProductModelProductDesc')]",
				"[concat(variables('workspaceId'), '/datasets/DimensionProduct')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AddDataToCustomerTable')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.objects O JOIN sys.schemas S ON O.schema_id = S.schema_id WHERE O.NAME = 'Customer_Dim' AND O.TYPE = 'U' AND S.NAME = 'adventureworks_schema')\nCREATE TABLE adventureworks_schema.Customer_Dim\n\t(\n\t [CustomerID] bigint,\n\t [Title] nvarchar(8),\n\t [FirstName] nvarchar(50),\n\t [MiddleName] nvarchar(50),\n\t [LastName] nvarchar(50),\n\t [Suffix] nvarchar(10),\n\t [CompanyName] nvarchar(128),\n\t [SalesPerson] nvarchar(256),\n\t [EmailAddress] nvarchar(50),\n\t [Phone] nvarchar(25),\n\t [PasswordHash] varchar(128),\n\t [PasswordSalt] varchar(10),\n\t [ModifiedDate] datetime2(0)\n\t)\nWITH\n\t(\n\tDISTRIBUTION = ROUND_ROBIN,\n\t CLUSTERED COLUMNSTORE INDEX\n\t)\nGO\n\nCOPY INTO adventureworks_schema.Customer_Dim\n(CustomerID 1, Title 3, FirstName 4, MiddleName 5, LastName 6, Suffix 7, CompanyName 8, SalesPerson 9, EmailAddress 10, Phone 11, PasswordHash 12, PasswordSalt 13, ModifiedDate 15)\nFROM 'https://adlgen2gradjhb.dfs.core.windows.net/dladventureworks/datalake/SalesLTCustomer'\n\n\nSELECT TOP 100 * FROM adventureworks_schema.Customer_Dim\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "sqlpool_adventureworksLT_jhb",
						"databaseName": "sqlpool_adventureworksLT_jhb"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AddDataToDateDim')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "TRUNCATE TABLE adventureworks_schema.Date_Dim\n\nDECLARE @CurrentDate DATE = '2010-05-01'\nDECLARE @EndDate DATE = '2020-12-31'\n\nWHILE @CurrentDate < @EndDate\nBEGIN\nINSERT INTO [adventureworks_schema].[Date_Dim](\n[DateID]\n,[Date]\n,[Day]\n,[Month]\n,[Quarter]\n,[Year]\n)\nSELECT [DateID] = @CurrentDate,\n[Date] = @CurrentDate,\n[Day] = DAY(@CurrentDate),\n[Month] = MONTH(@CurrentDate),\n[Quarter] = DATEPART(q, @CurrentDate),\n[Year] = YEAR(@CurrentDate)\nSET @CurrentDate = DATEADD(DD, 1, @CurrentDate)\nEND\n\nSELECT * from adventureworks_schema.Date_Dim\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "sqlpool_adventureworksLT_jhb",
						"databaseName": "sqlpool_adventureworksLT_jhb"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AddDataToProdCat')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.objects O JOIN sys.schemas S ON O.schema_id = S.schema_id WHERE O.NAME = '[ProductCategory_Dim]' AND O.TYPE = 'U' AND S.NAME = '[adventureworks_schema]')\nCREATE TABLE [adventureworks_schema].[ProductCategory_Dim]\n\t(\n\t [ProductCategoryID] int,\n\t [ParentProductCategoryID] int,\n\t [Name] nvarchar(50),\n\t [ModifiedDate] datetime\n\t)\nWITH\n\t(\n\tDISTRIBUTION = ROUND_ROBIN,\n\t CLUSTERED COLUMNSTORE INDEX\n\t -- HEAP\n\t)\nGO\n\n--Uncomment the 4 lines below to create a stored procedure for data pipeline orchestration​\n--CREATE PROC bulk_load_[ProductCategory_Dim]\n--AS\n--BEGIN\nCOPY INTO [adventureworks_schema].[ProductCategory_Dim]\n(ProductCategoryID 1, ParentProductCategoryID 2, Name 3, ModifiedDate 5)\nFROM 'https://adlgen2gradjhb.dfs.core.windows.net/dladventureworks/datalake/SalesLTProductCategory'\nGO\n\nSELECT TOP 100 * FROM [adventureworks_schema].[ProductCategory_Dim]\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "sqlpool_adventureworksLT_jhb",
						"databaseName": "sqlpool_adventureworksLT_jhb"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CopyProdCatDim')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "COPY INTO adventureworks_schema.ProductCategory_Dim\n(ProductCategoryID 1, ParentProductCategoryID 2, Name 3, ModifiedDate 5)\nFROM 'https://adlgen2gradjhb.dfs.core.windows.net/dladventureworks/datalake/SalesLTProductCategory'\n\nGO\n\nSELECT TOP 100 * FROM adventureworks_schema.ProductCategory_Dim\nGO\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "sqlpool_adventureworksLT_jhb",
						"databaseName": "sqlpool_adventureworksLT_jhb"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CopyProductDescription')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "COPY INTO adventureworks_schema.ProductDescription_Dim\n(ProductDescriptionID 1, Description 2, ModifiedDate 4)\nFROM 'https://adlgen2gradjhb.dfs.core.windows.net/dladventureworks/datalake/SalesLTProductDescription'\nGO\n\nSELECT * from adventureworks_schema.ProductDescription_Dim",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "sqlpool_adventureworksLT_jhb",
						"databaseName": "sqlpool_adventureworksLT_jhb"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CopySOHFact')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "COPY INTO adventureworks_schema.SalesOrderHeader_Fact\n(SalesOrderID 1, CustomerID 11, ShipToAddressID 12, BillToAddressID 13, OrderDateID 3, DueDateID 4, \nShipDateID 5, ModifiedDateID 22, OnlineOrderFlag 7, SubTotal 16, TaxAmt 17, Freight 18, TotalDue 19)\nFROM 'https://adlgen2gradjhb.dfs.core.windows.net/dladventureworks/datalake/SalesLTSalesOrderHeader'\n\nGO\n\nSELECT TOP 100 * FROM adventureworks_schema.SalesOrderHeader_Fact\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "sqlpool_adventureworksLT_jhb",
						"databaseName": "sqlpool_adventureworksLT_jhb"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CopyToSODFact')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "COPY INTO adventureworks_schema.SalesOrderDetail_Fact\n(SalesOrderID 1, SalesOrderDetailID 2, ModifiedDateID 9, OrderQty 3, ProductID 4, UnitPrice 5, UnitPriceDiscount 6, LineTotal 7)\nFROM 'https://adlgen2gradjhb.dfs.core.windows.net/dladventureworks/datalake/SalesLTSalesOrderDetail'\nGO\n\nSELECT TOP 100 * FROM adventureworks_schema.SalesOrderDetail_Fact\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "sqlpool_adventureworksLT_jhb",
						"databaseName": "sqlpool_adventureworksLT_jhb"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CreateAndCopySOHFact')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.objects O JOIN sys.schemas S ON O.schema_id = S.schema_id WHERE O.NAME = '[SalesOrderHeader_Fact]' AND O.TYPE = 'U' AND S.NAME = '[adventureworks_schema]')\nCREATE TABLE [adventureworks_schema].[SalesOrderHeader_Fact]\n\t(\n\t [SalesOrderID] int,\n\t [CustomerID] int,\n\t [ShipToAddressID] int,\n\t [BillToAddressID] int,\n\t [OrderDateID] date,\n\t [DueDateID] date,\n\t [ShipDateID] date,\n\t [ModifiedDateID] date,\n\t [OnlineOrderFlag] bit,\n\t [SubTotal] MONEY,\n\t [TaxAmt] MONEY,\n\t [Freight] MONEY,\n\t [TotalDue] MONEY\n\t)\nWITH\n\t(\n\tDISTRIBUTION = ROUND_ROBIN,\n\t CLUSTERED COLUMNSTORE INDEX\n\t -- HEAP\n\t)\nGO\n\nCOPY INTO [adventureworks_schema].[SalesOrderHeader_Fact]\n(SalesOrderID 1, CustomerID 11, ShipToAddressID 12, BillToAddressID 13, OrderDateID 3, DueDateID 4, ShipDateID 5, ModifiedDateID 22, OnlineOrderFlag 7, SubTotal 16, TaxAmt 17, Freight 18, TotalDue 19)\nFROM 'https://adlgen2gradjhb.dfs.core.windows.net/dladventureworks/datalake/SalesLTSalesOrderHeader'\nGO\n\nSELECT * FROM [adventureworks_schema].[SalesOrderHeader_Fact]\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "sqlpool_adventureworksLT_jhb",
						"databaseName": "sqlpool_adventureworksLT_jhb"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CreateDateDim')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE TABLE [adventureworks_schema].[Date_Dim]\n(\n    [DateID] INT NOT NULL,\n    [Date] DATE NOT NULL,\n    [Day] TINYINT NOT NULL,\n    [Month] TINYINT NOT NULL,\n    [Year] INT NOT NULL,\n    [Quarter] TINYINT NOT NULL\n)\nWITH\n(\n    DISTRIBUTION = ROUND_ROBIN,\n    CLUSTERED COLUMNSTORE INDEX\n);\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "sqlpool_adventureworksLT_jhb",
						"databaseName": "sqlpool_adventureworksLT_jhb"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CreateExtProdMod')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.objects O JOIN sys.schemas S ON O.schema_id = S.schema_id WHERE O.NAME = '[ProductMod]' AND O.TYPE = 'U' AND S.NAME = '[ext]')\nCREATE TABLE [ext].[ProductMod]\n\t(\n\t [ProductModelID] int,\n\t [ProductModelName] nvarchar(4000)\n\t)\nWITH\n\t(\n\tDISTRIBUTION = ROUND_ROBIN,\n\t HEAP\n\t)\nGO\n\n--Uncomment the 4 lines below to create a stored procedure for data pipeline orchestration​\n--CREATE PROC bulk_load_[Product]\n--AS\n--BEGIN\nCOPY INTO [ext].[ProductMod]\n(ProductModelID 1, ProductModelName 2)\nFROM 'https://adlgen2gradjhb.blob.core.windows.net/dladventureworks/datalake/SalesLTProductModel'\n\n--END\nGO\n\nSELECT TOP 100 * FROM [ext].[ProductMod]\nGO\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "sqlpool_adventureworksLT_jhb",
						"databaseName": "sqlpool_adventureworksLT_jhb"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CreateExtProdModProdDesc')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.objects O JOIN sys.schemas S ON O.schema_id = S.schema_id WHERE O.NAME = '[ProductModelProductDescription]' AND O.TYPE = 'U' AND S.NAME = '[ext]')\nCREATE TABLE [ext].[ProductModelProductDescription]\n\t(\n\t [ProductModelID] bigint,\n\t [ProductDescriptionID] bigint,\n\t [Culture] nvarchar(4000)\n\t)\nWITH\n\t(\n\tDISTRIBUTION = ROUND_ROBIN,\n\t CLUSTERED COLUMNSTORE INDEX\n\t -- HEAP\n\t)\nGO\n\n--Uncomment the 4 lines below to create a stored procedure for data pipeline orchestration​\n--CREATE PROC bulk_load_[ProductModelProductDescription]\n--AS\n--BEGIN\nCOPY INTO [ext].[ProductModelProductDescription]\n(ProductModelID 1, ProductDescriptionID 2, Culture 3)\nFROM 'https://adlgen2gradjhb.dfs.core.windows.net/dladventureworks/datalake/SalesLTProductModelProductDescription'\n--END\nGO\n\nSELECT TOP 100 * FROM [ext].[ProductModelProductDescription]\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "sqlpool_adventureworksLT_jhb",
						"databaseName": "sqlpool_adventureworksLT_jhb"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CreateExtProduct')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.objects O JOIN sys.schemas S ON O.schema_id = S.schema_id WHERE O.NAME = '[Product]' AND O.TYPE = 'U' AND S.NAME = '[ext]')\nCREATE TABLE [ext].[Product]\n\t(\n\t [ProductID] int,\n\t [ProductName] nvarchar(4000),\n\t [ProductNumber] nvarchar(4000),\n\t [Color] nvarchar(4000),\n\t [StandardCost] float,\n\t [ListPrice] float,\n\t [Size] nvarchar(4000),\n\t [Weight] float,\n\t [ProductCategoryID] int,\n\t [ProductModelID] int,\n\t [SellStartDateID] datetime2(0),\n\t [SellEndDateID] datetime2(0),\n\t [DiscontinuedDateID] nvarchar(4000),\n\t [ThumbnailPhotoFileName] nvarchar(4000),\n\t [ModifiedDateID] DATETIME2(0)\n\t)\nWITH\n\t(\n\tDISTRIBUTION = ROUND_ROBIN,\n\t HEAP\n\t)\nGO\n\n--Uncomment the 4 lines below to create a stored procedure for data pipeline orchestration​\n--CREATE PROC bulk_load_[Product]\n--AS\n--BEGIN\nCOPY INTO [ext].[Product]\n(ProductID 1, ProductName 2, ProductNumber 3, Color 4, StandardCost 5, ListPrice 6, Size 7, Weight 8, ProductCategoryID 9, ProductModelID 10, SellStartDateID 11, SellEndDateID 12, DiscontinuedDateID 13, ThumbnailPhotoFileName 15, ModifiedDateID 17)\nFROM 'https://adlgen2gradjhb.dfs.core.windows.net/dladventureworks/datalake/SalesLTProduct'\n\n--END\nGO\n\nSELECT TOP 100 * FROM [ext].[Product]\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "sqlpool_adventureworksLT_jhb",
						"databaseName": "sqlpool_adventureworksLT_jhb"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CreateExternalAddress')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.objects O JOIN sys.schemas S ON O.schema_id = S.schema_id WHERE O.NAME = '[Dimension_Address]' AND O.TYPE = 'U' AND S.NAME = '[ext]')\nCREATE TABLE [ext].[Dimension_Address]\n\t(\n\t [AddressID] int,\n\t [AddressLine1] nvarchar(4000),\n\t [AddressLine2] nvarchar(4000),\n\t [City] nvarchar(4000),\n\t [StateProvince] nvarchar(4000),\n\t [CountryRegion] nvarchar(4000),\n\t [PostalCode] nvarchar(4000),\n\t [ModifiedDate] datetime2(0)\n\t)\nWITH\n\t(\n\tDISTRIBUTION = ROUND_ROBIN,\n\t CLUSTERED COLUMNSTORE INDEX\n\t -- CLUSTERED COLUMNSTORE INDEX\n\t)\nGO\n\n--Uncomment the 4 lines below to create a stored procedure for data pipeline orchestration​\n--CREATE PROC bulk_load_[Address]\n--AS\n--BEGIN\nCOPY INTO [ext].[Dimension_Address]\n(AddressID 1, AddressLine1 2, AddressLine2 3, City 4, StateProvince 5, CountryRegion 6, PostalCode 7, ModifiedDate 9)\nFROM 'https://adlgen2gradjhb.dfs.core.windows.net/dladventureworks/datalake/SalesLTAddress'\n\n--END\nGO\n\nSELECT TOP 100 * FROM [ext].[Dimension_Address]\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "sqlpool_adventureworksLT_jhb",
						"databaseName": "sqlpool_adventureworksLT_jhb"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CreateExternalCustomer')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.objects O JOIN sys.schemas S ON O.schema_id = S.schema_id WHERE O.NAME = '[Dimension_Customer]' AND O.TYPE = 'U' AND S.NAME = '[ext]')\nCREATE TABLE [ext].[Dimension_Customer]\n\t(\n\t [CustomerID] [bigint]  NULL,\n\t[Title] [nvarchar](8)  NULL,\n\t[FirstName] [nvarchar](50)  NULL,\n\t[MiddleName] [nvarchar](50)  NULL,\n\t[LastName] [nvarchar](50)  NULL,\n\t[Suffix] [nvarchar](10)  NULL,\n\t[CompanyName] [nvarchar](128)  NULL,\n\t[SalesPerson] [nvarchar](256)  NULL,\n\t[EmailAddress] [nvarchar](50)  NULL,\n\t[Phone] [nvarchar](25)  NULL,\n\t[PasswordHash] [varchar](128)  NULL,\n\t[PasswordSalt] [varchar](10)  NULL,\n\t[ModifiedDateID] [datetime2](0)  NULL\n\t)\nWITH\n\t(\n\tDISTRIBUTION = ROUND_ROBIN,\n\t CLUSTERED COLUMNSTORE INDEX\n\t -- HEAP\n\t)\nGO\n\n--Uncomment the 4 lines below to create a stored procedure for data pipeline orchestration​\n--CREATE PROC bulk_load_[Dimension_Customer]\n--AS\n--BEGIN\nCOPY INTO [ext].[Dimension_Customer]\n(CustomerID 1, Title 3, FirstName 4, MiddleName 5, LastName 6, Suffix 7, CompanyName 8, SalesPerson 9, EmailAddress 10, Phone 11, PasswordHash 12, PasswordSalt 13, ModifiedDateID 15)\nFROM 'https://adlgen2gradjhb.dfs.core.windows.net/dladventureworks/datalake/SalesLTCustomer'\n--END\nGO\n\nSELECT TOP 100 * FROM [ext].[Dimension_Customer]\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "sqlpool_adventureworksLT_jhb",
						"databaseName": "sqlpool_adventureworksLT_jhb"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CreateSODFact')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE TABLE [adventureworks_schema].[SalesOrderDetail_Fact]\n(\n    [SalesOrderID]\tint\tNOT NULL,\n    [SalesOrderDetailID]\tint\tNOT NULL,\n    [OrderQty]\tsmallint NOT NULL,\n    [ProductID]\tint\tNOT NULL,\n    [UnitPrice]\tmoney NOT NULL,\t\n    [UnitPriceDiscount]\tmoney\tNOT NULL,\n    [LineTotal] MONEY\tNOT NULL,\t\n    [ModifiedDate]\tdatetime NOT NULL\n)\nWITH\n(\n    DISTRIBUTION = ROUND_ROBIN,\n    CLUSTERED COLUMNSTORE INDEX\n);\nCOPY INTO [adventureworks_schema].[SalesOrderDetail_Fact]\n(SalesOrderID 1, SalesOrderDetailID 2, OrderQty 3,ProductID 4\n,UnitPrice 5, UnitPriceDiscount 6, LineTotal 7, ModifiedDate 9)\nFROM 'https://adlgen2gradjhb.dfs.core.windows.net/dladventureworks/datalake/SalesLtSalesOrderDetail'\nGO\n\nSELECT * from [adventureworks_schema].[SalesOrderDetail_Fact]\n\t\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "sqlpool_adventureworksLT_jhb",
						"databaseName": "sqlpool_adventureworksLT_jhb"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CreaterExtProdDesc')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.objects O JOIN sys.schemas S ON O.schema_id = S.schema_id WHERE O.NAME = '[ProductDesc]' AND O.TYPE = 'U' AND S.NAME = '[ext]')\nCREATE TABLE [ext].[ProductDesc]\n\t(\n\t [ProductDescriptionID] int,\n\t [Description] nvarchar(4000)\n\t)\nWITH\n\t(\n\tDISTRIBUTION = ROUND_ROBIN,\n\t CLUSTERED COLUMNSTORE INDEX\n\t -- HEAP\n\t)\nGO\n\n--Uncomment the 4 lines below to create a stored procedure for data pipeline orchestration​\n--CREATE PROC bulk_load_[ProductCat]\n--AS\n--BEGIN\nINSERT INTO [ext].[ProductDesc]\n(ProductDescriptionID, Description)\nSELECT [ProductDescriptionID], [Description]\nFROM [adventureworks_schema].[ProductDescription_Dim]\n--END\nGO\n\nSELECT TOP 100 * FROM [ext].[ProductDesc]\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "sqlpool_adventureworksLT_jhb",
						"databaseName": "sqlpool_adventureworksLT_jhb"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 1')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT * FROM [adventureworks_schema].[SalesOrderHeader_Fact]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "sqlpool_adventureworksLT_jhb",
						"databaseName": "sqlpool_adventureworksLT_jhb"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 2')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT TOP (100) [DateID]\n,[Date]\n,[Day]\n,[Month]\n,[Year]\n,[Quarter]\n FROM [adventureworks_schema].[Date_Dim]\n ORDER BY [Date]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "sqlpool_adventureworksLT_jhb",
						"databaseName": "sqlpool_adventureworksLT_jhb"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 3')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.objects O JOIN sys.schemas S ON O.schema_id = S.schema_id WHERE O.NAME = 'Product_Description_Dim' AND O.TYPE = 'U' AND S.NAME = 'adventureworks_schema')\nCREATE TABLE adventureworks_schema.Product_Dim\n    (\n     [ProductDescriptionID] bigint,\n     [Description] nvarchar(400),\n     [ModifiedDate] datetime\n    )\nWITH\n    (\n    DISTRIBUTION = ROUND_ROBIN,\n    CLUSTERED COLUMNSTORE INDEX\n    )\nGO \n\n \n\nCOPY INTO adventureworks_schema.Product_Description_Dim\n(ProductDescriptionID 1, Description 2, ModifiedDate 4)\nFROM 'https://adlgen2gradjhb.blob.core.windows.net/dladventureworks/datalake/SalesLTProductDescription'\n\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "sqlpool_adventureworksLT_jhb",
						"databaseName": "sqlpool_adventureworksLT_jhb"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 4')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "sqlpool_adventureworksLT_jhb",
						"databaseName": "sqlpool_adventureworksLT_jhb"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 5')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE SCHEMA ext;\nselect Firstname, Amount, PostalCode, LastName, AccountNumber\nfrom\n(\n  select value, columnname\n  from yourtable\n) d\npivot\n(\n  max(value)\n  for columnname in (Firstname, Amount, PostalCode, LastName, AccountNumber)\n) piv;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "sqlpool_adventureworksLT_jhb",
						"databaseName": "sqlpool_adventureworksLT_jhb"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 6')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT ProductID, ProductName, ProductNumber, Color, StandardCost, ListPrice,\n    Size, Weight, P.ProductCategoryID, ProductCategoryName, P.ProductModelID, ProductModelName, \n    PD.ProductDescriptionID, DescriptionAr, DescriptionEn, DescriptionFr, DescriptionHe, \n    DescriptionTh, DescriptionZh-cht, SellStartDateID, SellEndDateID, \n    DiscontinuedDateID, ThumbnailPhotoFileName, ModifiedDateID\nfrom ext.Product P\nJOIN ext.ProductCat PC on P.ProductCategoryID = PC.ProductCategoryID \nJOIN ext.ProductMod PM on P.ProductModelID = PM.ProductModelID \nJOIN ext.ProductModelProductDescription PMPD on PMPD.ProductModelID = PM.ProductModelID\nJOIN ext.ProductDesc PD on PD.ProductDescriptionID = PMPD.ProductDescriptionID   \n\nselect ar, he, en, th, fr\nfrom\n(\n  select Culture, Description\n  from ext.ProductModelProductDescription PMPD join ext.ProductDesc PD on PMPD.ProductDescriptionID = PD.ProductDescriptionID\n) d\npivot\n(\n  max(Description)\n  for Culture in (ar, he, en, th, fr)\n) piv;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "sqlpool_adventureworksLT_jhb",
						"databaseName": "sqlpool_adventureworksLT_jhb"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 7')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT TOP (100) [ProductModelID]\n,[ProductModelName]\n FROM [ext].[ProductMod]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "sqlpool_adventureworksLT_jhb",
						"databaseName": "sqlpool_adventureworksLT_jhb"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 8')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "DROP TABLE [adventureworks_schema].[Product_Dim]\nGO\n\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\n\nCREATE TABLE [adventureworks_schema].[Product_Dim]\n( \n\t[ProductID] [int]  NULL,\n\t[ModelName] [nvarchar](100)  NULL,\n\t[ProductName] [nvarchar](100)  NULL,\n\t[Color] [nvarchar](150)  NULL,\n\t[ProductNumber] [nvarchar](250)  NULL,\n\t[ProductCategoryName] [nvarchar](250)  NULL,\n\t[Size] [nvarchar](50)  NULL,\n\t[ListPrice] [decimal](8,2)  NULL,\n\t[StandardCost] [decimal](8,2)  NULL,\n\t[Weight] [decimal](8,2)  NULL,\n\t[SellEndDateID] [datetime]  NULL,\n\t[SellStartDateID] [datetime]  NULL,\n\t[DiscontinuedDateID] [datetime]  NULL,\n\t[ModifiedDateID] [datetime]  NULL,\n\t[DescriptionCultureAr] [nvarchar](1000)  NULL,\n\t[DescriptionCultureEn] [nvarchar](1000)  NULL,\n\t[DescriptionCultureFr] [nvarchar](1000)  NULL,\n\t[DescriptionCultureHe] [nvarchar](1000)  NULL,\n\t[DescriptionCultureTh] [nvarchar](1000)  NULL,\n\t[DescriptionCultureZh-cht] [nvarchar](1000)  NULL\n)\nWITH\n(\n\tDISTRIBUTION = ROUND_ROBIN,\n\tCLUSTERED COLUMNSTORE INDEX\n)\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "sqlpool_adventureworksLT_jhb",
						"databaseName": "sqlpool_adventureworksLT_jhb"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sqlpool_adventureworksLT_jhb')]",
			"type": "Microsoft.Synapse/workspaces/sqlPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"collation": "SQL_Latin1_General_CP1_CI_AS",
				"maxSizeBytes": 263882790666240,
				"restorePointInTime": "0001-01-01T00:00:00",
				"annotations": []
			},
			"dependsOn": [],
			"location": "northeurope"
		},
		{
			"name": "[concat(parameters('workspaceName'), '/default')]",
			"type": "Microsoft.Synapse/workspaces/managedVirtualNetworks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"preventDataExfiltration": false
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/default/AzureDataLakeStorage1')]",
			"type": "Microsoft.Synapse/workspaces/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"privateLinkResourceId": "/subscriptions/d138d070-e1e1-4cce-89e7-3488bf444519/resourceGroups/rg-grad-jhb/providers/Microsoft.Storage/storageAccounts/adlgen2gradjhb",
				"groupId": "dfs"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/managedVirtualNetworks/default')]"
			]
		}
	]
}